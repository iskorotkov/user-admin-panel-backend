/*
 * API for user admin panel
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Contact: korotkov.ivan.s@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"errors"
	"net/http"
)

// UsersApiService is a service that implements the logic for the UsersApiServicer
// This service should implement the business logic for every endpoint for the UsersApi API.
// Include any external packages or services that will be required by this service.
type UsersApiService struct {
}

// NewUsersApiService creates a default api service
func NewUsersApiService() UsersApiServicer {
	return &UsersApiService{}
}

// All -
func (s *UsersApiService) All(ctx context.Context) (ImplResponse, error) {
	// TODO - update All with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []User{}) or use other options such as http.Ok ...
	//return Response(200, []User{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("All method not implemented")
}

// Create -
func (s *UsersApiService) Create(ctx context.Context, newUser NewUser) (ImplResponse, error) {
	// TODO - update Create with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, User{}) or use other options such as http.Ok ...
	//return Response(201, User{}), nil

	//TODO: Uncomment the next line to return response Response(422, Error{}) or use other options such as http.Ok ...
	//return Response(422, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Create method not implemented")
}

// Delete -
func (s *UsersApiService) Delete(ctx context.Context, id int32) (ImplResponse, error) {
	// TODO - update Delete with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Delete method not implemented")
}

// Single -
func (s *UsersApiService) Single(ctx context.Context, id int32) (ImplResponse, error) {
	// TODO - update Single with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Single method not implemented")
}

// Update -
func (s *UsersApiService) Update(ctx context.Context, id int32, user User) (ImplResponse, error) {
	// TODO - update Update with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	//TODO: Uncomment the next line to return response Response(201, User{}) or use other options such as http.Ok ...
	//return Response(201, User{}), nil

	//TODO: Uncomment the next line to return response Response(422, Error{}) or use other options such as http.Ok ...
	//return Response(422, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Update method not implemented")
}
